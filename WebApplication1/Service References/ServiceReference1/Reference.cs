//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.UserType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.UserType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserType", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum UserType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        admin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        standard = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileTransfer", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class FileTransfer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.FileInfo InfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.FileInfo Info {
            get {
                return this.InfoField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoField, value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfo", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class FileInfo : WebApplication1.ServiceReference1.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.FileType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.FileType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication1.ServiceReference1.Package))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication1.ServiceReference1.FileInfo))]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerEmail {
            get {
                return this.OwnerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerEmailField, value) != true)) {
                    this.OwnerEmailField = value;
                    this.RaisePropertyChanged("OwnerEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Package", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Package : WebApplication1.ServiceReference1.Item {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] FileIdsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] FileIds {
            get {
                return this.FileIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.FileIdsField, value) != true)) {
                    this.FileIdsField = value;
                    this.RaisePropertyChanged("FileIds");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileType", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum FileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        other = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        text = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        image = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        audio = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        video = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Right", Namespace="http://schemas.datacontract.org/2004/07/Server.DataContracts")]
    [System.SerializableAttribute()]
    public partial class Right : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.RightType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UntilField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.RightType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Until {
            get {
                return this.UntilField;
            }
            set {
                if ((this.UntilField.Equals(value) != true)) {
                    this.UntilField = value;
                    this.RaisePropertyChanged("Until");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RightType", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    public enum RightType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        view = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        edit = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateUser", ReplyAction="http://tempuri.org/IService/CreateUserResponse")]
        void CreateUser(WebApplication1.ServiceReference1.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateUser", ReplyAction="http://tempuri.org/IService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(WebApplication1.ServiceReference1.User newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserByEmail", ReplyAction="http://tempuri.org/IService/GetUserByEmailResponse")]
        WebApplication1.ServiceReference1.User GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserByEmail", ReplyAction="http://tempuri.org/IService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.User> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateUser", ReplyAction="http://tempuri.org/IService/UpdateUserResponse")]
        void UpdateUser(WebApplication1.ServiceReference1.User updatedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateUser", ReplyAction="http://tempuri.org/IService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(WebApplication1.ServiceReference1.User updatedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUserByEmail", ReplyAction="http://tempuri.org/IService/DeleteUserByEmailResponse")]
        void DeleteUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteUserByEmail", ReplyAction="http://tempuri.org/IService/DeleteUserByEmailResponse")]
        System.Threading.Tasks.Task DeleteUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        int UploadFile(WebApplication1.ServiceReference1.FileTransfer transfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadFile", ReplyAction="http://tempuri.org/IService/UploadFileResponse")]
        System.Threading.Tasks.Task<int> UploadFileAsync(WebApplication1.ServiceReference1.FileTransfer transfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DownloadFileById", ReplyAction="http://tempuri.org/IService/DownloadFileByIdResponse")]
        byte[] DownloadFileById(int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DownloadFileById", ReplyAction="http://tempuri.org/IService/DownloadFileByIdResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadFileByIdAsync(int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFileInfoById", ReplyAction="http://tempuri.org/IService/GetFileInfoByIdResponse")]
        WebApplication1.ServiceReference1.FileInfo GetFileInfoById(int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFileInfoById", ReplyAction="http://tempuri.org/IService/GetFileInfoByIdResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo> GetFileInfoByIdAsync(int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateFileInfo", ReplyAction="http://tempuri.org/IService/UpdateFileInfoResponse")]
        void UpdateFileInfo(WebApplication1.ServiceReference1.FileInfo updatedInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateFileInfo", ReplyAction="http://tempuri.org/IService/UpdateFileInfoResponse")]
        System.Threading.Tasks.Task UpdateFileInfoAsync(WebApplication1.ServiceReference1.FileInfo updatedInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateFileData", ReplyAction="http://tempuri.org/IService/UpdateFileDataResponse")]
        void UpdateFileData(byte[] updatedData, int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateFileData", ReplyAction="http://tempuri.org/IService/UpdateFileDataResponse")]
        System.Threading.Tasks.Task UpdateFileDataAsync(byte[] updatedData, int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteFileById", ReplyAction="http://tempuri.org/IService/DeleteFileByIdResponse")]
        void DeleteFileById(int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteFileById", ReplyAction="http://tempuri.org/IService/DeleteFileByIdResponse")]
        System.Threading.Tasks.Task DeleteFileByIdAsync(int fId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOwnedFileInfosByEmail", ReplyAction="http://tempuri.org/IService/GetOwnedFileInfosByEmailResponse")]
        WebApplication1.ServiceReference1.FileInfo[] GetOwnedFileInfosByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOwnedFileInfosByEmail", ReplyAction="http://tempuri.org/IService/GetOwnedFileInfosByEmailResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo[]> GetOwnedFileInfosByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTag", ReplyAction="http://tempuri.org/IService/AddTagResponse")]
        void AddTag(string text, int iId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTag", ReplyAction="http://tempuri.org/IService/AddTagResponse")]
        System.Threading.Tasks.Task AddTagAsync(string text, int iId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DropTag", ReplyAction="http://tempuri.org/IService/DropTagResponse")]
        void DropTag(string text, int iId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DropTag", ReplyAction="http://tempuri.org/IService/DropTagResponse")]
        System.Threading.Tasks.Task DropTagAsync(string text, int iId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTagsByItemId", ReplyAction="http://tempuri.org/IService/GetTagsByItemIdResponse")]
        string[] GetTagsByItemId(int iId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTagsByItemId", ReplyAction="http://tempuri.org/IService/GetTagsByItemIdResponse")]
        System.Threading.Tasks.Task<string[]> GetTagsByItemIdAsync(int iId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFileInfosByTag", ReplyAction="http://tempuri.org/IService/GetFileInfosByTagResponse")]
        WebApplication1.ServiceReference1.FileInfo[] GetFileInfosByTag(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFileInfosByTag", ReplyAction="http://tempuri.org/IService/GetFileInfosByTagResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo[]> GetFileInfosByTagAsync(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePackage", ReplyAction="http://tempuri.org/IService/CreatePackageResponse")]
        int CreatePackage(WebApplication1.ServiceReference1.Package newPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreatePackage", ReplyAction="http://tempuri.org/IService/CreatePackageResponse")]
        System.Threading.Tasks.Task<int> CreatePackageAsync(WebApplication1.ServiceReference1.Package newPackage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPackageById", ReplyAction="http://tempuri.org/IService/GetPackageByIdResponse")]
        WebApplication1.ServiceReference1.Package GetPackageById(int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPackageById", ReplyAction="http://tempuri.org/IService/GetPackageByIdResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package> GetPackageByIdAsync(int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToPackage", ReplyAction="http://tempuri.org/IService/AddToPackageResponse")]
        void AddToPackage(int[] fIds, int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToPackage", ReplyAction="http://tempuri.org/IService/AddToPackageResponse")]
        System.Threading.Tasks.Task AddToPackageAsync(int[] fIds, int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveFromPackage", ReplyAction="http://tempuri.org/IService/RemoveFromPackageResponse")]
        void RemoveFromPackage(int[] fIds, int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RemoveFromPackage", ReplyAction="http://tempuri.org/IService/RemoveFromPackageResponse")]
        System.Threading.Tasks.Task RemoveFromPackageAsync(int[] fIds, int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePackageById", ReplyAction="http://tempuri.org/IService/DeletePackageByIdResponse")]
        void DeletePackageById(int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePackageById", ReplyAction="http://tempuri.org/IService/DeletePackageByIdResponse")]
        System.Threading.Tasks.Task DeletePackageByIdAsync(int pId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOwnedPackagesByEmail", ReplyAction="http://tempuri.org/IService/GetOwnedPackagesByEmailResponse")]
        WebApplication1.ServiceReference1.Package[] GetOwnedPackagesByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOwnedPackagesByEmail", ReplyAction="http://tempuri.org/IService/GetOwnedPackagesByEmailResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package[]> GetOwnedPackagesByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPackagesByTag", ReplyAction="http://tempuri.org/IService/GetPackagesByTagResponse")]
        WebApplication1.ServiceReference1.Package[] GetPackagesByTag(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPackagesByTag", ReplyAction="http://tempuri.org/IService/GetPackagesByTagResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package[]> GetPackagesByTagAsync(string tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GrantRight", ReplyAction="http://tempuri.org/IService/GrantRightResponse")]
        void GrantRight(WebApplication1.ServiceReference1.Right newRight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GrantRight", ReplyAction="http://tempuri.org/IService/GrantRightResponse")]
        System.Threading.Tasks.Task GrantRightAsync(WebApplication1.ServiceReference1.Right newRight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRight", ReplyAction="http://tempuri.org/IService/GetRightResponse")]
        WebApplication1.ServiceReference1.Right GetRight(string email, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRight", ReplyAction="http://tempuri.org/IService/GetRightResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Right> GetRightAsync(string email, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateRight", ReplyAction="http://tempuri.org/IService/UpdateRightResponse")]
        void UpdateRight(WebApplication1.ServiceReference1.Right updatedRight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateRight", ReplyAction="http://tempuri.org/IService/UpdateRightResponse")]
        System.Threading.Tasks.Task UpdateRightAsync(WebApplication1.ServiceReference1.Right updatedRight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DropRight", ReplyAction="http://tempuri.org/IService/DropRightResponse")]
        void DropRight(string email, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DropRight", ReplyAction="http://tempuri.org/IService/DropRightResponse")]
        System.Threading.Tasks.Task DropRightAsync(string email, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchFileInfos", ReplyAction="http://tempuri.org/IService/SearchFileInfosResponse")]
        WebApplication1.ServiceReference1.FileInfo[] SearchFileInfos(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchFileInfos", ReplyAction="http://tempuri.org/IService/SearchFileInfosResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo[]> SearchFileInfosAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchPackages", ReplyAction="http://tempuri.org/IService/SearchPackagesResponse")]
        WebApplication1.ServiceReference1.Package[] SearchPackages(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchPackages", ReplyAction="http://tempuri.org/IService/SearchPackagesResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package[]> SearchPackagesAsync(string query);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WebApplication1.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IService>, WebApplication1.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateUser(WebApplication1.ServiceReference1.User newUser) {
            base.Channel.CreateUser(newUser);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(WebApplication1.ServiceReference1.User newUser) {
            return base.Channel.CreateUserAsync(newUser);
        }
        
        public WebApplication1.ServiceReference1.User GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.User> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public void UpdateUser(WebApplication1.ServiceReference1.User updatedUser) {
            base.Channel.UpdateUser(updatedUser);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(WebApplication1.ServiceReference1.User updatedUser) {
            return base.Channel.UpdateUserAsync(updatedUser);
        }
        
        public void DeleteUserByEmail(string email) {
            base.Channel.DeleteUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task DeleteUserByEmailAsync(string email) {
            return base.Channel.DeleteUserByEmailAsync(email);
        }
        
        public int UploadFile(WebApplication1.ServiceReference1.FileTransfer transfer) {
            return base.Channel.UploadFile(transfer);
        }
        
        public System.Threading.Tasks.Task<int> UploadFileAsync(WebApplication1.ServiceReference1.FileTransfer transfer) {
            return base.Channel.UploadFileAsync(transfer);
        }
        
        public byte[] DownloadFileById(int fId) {
            return base.Channel.DownloadFileById(fId);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadFileByIdAsync(int fId) {
            return base.Channel.DownloadFileByIdAsync(fId);
        }
        
        public WebApplication1.ServiceReference1.FileInfo GetFileInfoById(int fId) {
            return base.Channel.GetFileInfoById(fId);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo> GetFileInfoByIdAsync(int fId) {
            return base.Channel.GetFileInfoByIdAsync(fId);
        }
        
        public void UpdateFileInfo(WebApplication1.ServiceReference1.FileInfo updatedInfo) {
            base.Channel.UpdateFileInfo(updatedInfo);
        }
        
        public System.Threading.Tasks.Task UpdateFileInfoAsync(WebApplication1.ServiceReference1.FileInfo updatedInfo) {
            return base.Channel.UpdateFileInfoAsync(updatedInfo);
        }
        
        public void UpdateFileData(byte[] updatedData, int fId) {
            base.Channel.UpdateFileData(updatedData, fId);
        }
        
        public System.Threading.Tasks.Task UpdateFileDataAsync(byte[] updatedData, int fId) {
            return base.Channel.UpdateFileDataAsync(updatedData, fId);
        }
        
        public void DeleteFileById(int fId) {
            base.Channel.DeleteFileById(fId);
        }
        
        public System.Threading.Tasks.Task DeleteFileByIdAsync(int fId) {
            return base.Channel.DeleteFileByIdAsync(fId);
        }
        
        public WebApplication1.ServiceReference1.FileInfo[] GetOwnedFileInfosByEmail(string email) {
            return base.Channel.GetOwnedFileInfosByEmail(email);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo[]> GetOwnedFileInfosByEmailAsync(string email) {
            return base.Channel.GetOwnedFileInfosByEmailAsync(email);
        }
        
        public void AddTag(string text, int iId) {
            base.Channel.AddTag(text, iId);
        }
        
        public System.Threading.Tasks.Task AddTagAsync(string text, int iId) {
            return base.Channel.AddTagAsync(text, iId);
        }
        
        public void DropTag(string text, int iId) {
            base.Channel.DropTag(text, iId);
        }
        
        public System.Threading.Tasks.Task DropTagAsync(string text, int iId) {
            return base.Channel.DropTagAsync(text, iId);
        }
        
        public string[] GetTagsByItemId(int iId) {
            return base.Channel.GetTagsByItemId(iId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTagsByItemIdAsync(int iId) {
            return base.Channel.GetTagsByItemIdAsync(iId);
        }
        
        public WebApplication1.ServiceReference1.FileInfo[] GetFileInfosByTag(string tag) {
            return base.Channel.GetFileInfosByTag(tag);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo[]> GetFileInfosByTagAsync(string tag) {
            return base.Channel.GetFileInfosByTagAsync(tag);
        }
        
        public int CreatePackage(WebApplication1.ServiceReference1.Package newPackage) {
            return base.Channel.CreatePackage(newPackage);
        }
        
        public System.Threading.Tasks.Task<int> CreatePackageAsync(WebApplication1.ServiceReference1.Package newPackage) {
            return base.Channel.CreatePackageAsync(newPackage);
        }
        
        public WebApplication1.ServiceReference1.Package GetPackageById(int pId) {
            return base.Channel.GetPackageById(pId);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package> GetPackageByIdAsync(int pId) {
            return base.Channel.GetPackageByIdAsync(pId);
        }
        
        public void AddToPackage(int[] fIds, int pId) {
            base.Channel.AddToPackage(fIds, pId);
        }
        
        public System.Threading.Tasks.Task AddToPackageAsync(int[] fIds, int pId) {
            return base.Channel.AddToPackageAsync(fIds, pId);
        }
        
        public void RemoveFromPackage(int[] fIds, int pId) {
            base.Channel.RemoveFromPackage(fIds, pId);
        }
        
        public System.Threading.Tasks.Task RemoveFromPackageAsync(int[] fIds, int pId) {
            return base.Channel.RemoveFromPackageAsync(fIds, pId);
        }
        
        public void DeletePackageById(int pId) {
            base.Channel.DeletePackageById(pId);
        }
        
        public System.Threading.Tasks.Task DeletePackageByIdAsync(int pId) {
            return base.Channel.DeletePackageByIdAsync(pId);
        }
        
        public WebApplication1.ServiceReference1.Package[] GetOwnedPackagesByEmail(string email) {
            return base.Channel.GetOwnedPackagesByEmail(email);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package[]> GetOwnedPackagesByEmailAsync(string email) {
            return base.Channel.GetOwnedPackagesByEmailAsync(email);
        }
        
        public WebApplication1.ServiceReference1.Package[] GetPackagesByTag(string tag) {
            return base.Channel.GetPackagesByTag(tag);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package[]> GetPackagesByTagAsync(string tag) {
            return base.Channel.GetPackagesByTagAsync(tag);
        }
        
        public void GrantRight(WebApplication1.ServiceReference1.Right newRight) {
            base.Channel.GrantRight(newRight);
        }
        
        public System.Threading.Tasks.Task GrantRightAsync(WebApplication1.ServiceReference1.Right newRight) {
            return base.Channel.GrantRightAsync(newRight);
        }
        
        public WebApplication1.ServiceReference1.Right GetRight(string email, int itemId) {
            return base.Channel.GetRight(email, itemId);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Right> GetRightAsync(string email, int itemId) {
            return base.Channel.GetRightAsync(email, itemId);
        }
        
        public void UpdateRight(WebApplication1.ServiceReference1.Right updatedRight) {
            base.Channel.UpdateRight(updatedRight);
        }
        
        public System.Threading.Tasks.Task UpdateRightAsync(WebApplication1.ServiceReference1.Right updatedRight) {
            return base.Channel.UpdateRightAsync(updatedRight);
        }
        
        public void DropRight(string email, int itemId) {
            base.Channel.DropRight(email, itemId);
        }
        
        public System.Threading.Tasks.Task DropRightAsync(string email, int itemId) {
            return base.Channel.DropRightAsync(email, itemId);
        }
        
        public WebApplication1.ServiceReference1.FileInfo[] SearchFileInfos(string query) {
            return base.Channel.SearchFileInfos(query);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.FileInfo[]> SearchFileInfosAsync(string query) {
            return base.Channel.SearchFileInfosAsync(query);
        }
        
        public WebApplication1.ServiceReference1.Package[] SearchPackages(string query) {
            return base.Channel.SearchPackages(query);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.Package[]> SearchPackagesAsync(string query) {
            return base.Channel.SearchPackagesAsync(query);
        }
    }
}
